/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  MonthlySummary, // @ts-ignore
  Hostel,
} from "@prisma/client";

export class MonthlySummaryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.MonthlySummaryCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.MonthlySummaryCountArgs>
  ): Promise<number> {
    return this.prisma.monthlySummary.count(args);
  }

  async monthlySummaries<T extends Prisma.MonthlySummaryFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MonthlySummaryFindManyArgs>
  ): Promise<MonthlySummary[]> {
    return this.prisma.monthlySummary.findMany(args);
  }
  async monthlySummary<T extends Prisma.MonthlySummaryFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MonthlySummaryFindUniqueArgs>
  ): Promise<MonthlySummary | null> {
    return this.prisma.monthlySummary.findUnique(args);
  }
  async createMonthlySummary<T extends Prisma.MonthlySummaryCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MonthlySummaryCreateArgs>
  ): Promise<MonthlySummary> {
    return this.prisma.monthlySummary.create<T>(args);
  }
  async updateMonthlySummary<T extends Prisma.MonthlySummaryUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MonthlySummaryUpdateArgs>
  ): Promise<MonthlySummary> {
    return this.prisma.monthlySummary.update<T>(args);
  }
  async deleteMonthlySummary<T extends Prisma.MonthlySummaryDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MonthlySummaryDeleteArgs>
  ): Promise<MonthlySummary> {
    return this.prisma.monthlySummary.delete(args);
  }

  async getHostel(parentId: string): Promise<Hostel | null> {
    return this.prisma.monthlySummary
      .findUnique({
        where: { id: parentId },
      })
      .hostel();
  }
}
